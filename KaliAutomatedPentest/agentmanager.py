from spade.agent import Agent
from spade.behaviour import FSMBehaviour, State
from spade.message import Message
from spade.template import Template

from states.scanningstate import ScanningState
from states.exploitstate import ExploitState
from states.reportstate import ReportState
from states.endstate import EndState

SCANNING_STATE="SCANNING_STATE" #Information gathering state
EXPLOIT_STATE="EXPLOIT_STATE" #Exploatation state
REPORT_STATE="REPORT_STATE" #Report state
END_STATE="END_STATE" #Ends the execution of an agent


class ManagerAgent(Agent):
    async def setup(self):
        fsm = FSMBehaviour()
        fsm.add_state(name=SCANNING_STATE, state=ScanningState(), initial=True)
        fsm.add_state(name=EXPLOIT_STATE, state=ExploitState())
        fsm.add_state(name=REPORT_STATE, state=ReportState())
        fsm.add_state(name=END_STATE, state=EndState())
        
        #TODO idea if this doesn't work try creating scanning_state = ScanningState(self.target) and then invoke the method to set it's target (set_target() method)
        # scanning_state.set_target(self.target)
        # and then add it to the state

        fsm.add_transition(source=SCANNING_STATE, dest=EXPLOIT_STATE)
        fsm.add_transition(source=EXPLOIT_STATE, dest=REPORT_STATE)
        fsm.add_transition(source=REPORT_STATE,dest=END_STATE)
        
        self.add_behaviour(fsm,template=None)
        print("manager setup done")

if __name__ == "__main__":
    #TODO read arguments (target ip)
    #TODO parse the arguments to the manageragent
    manager_agent = ManagerAgent("manager@localhost","supersecret")
    #manager_agent.set_target("127.0.0.1")
    manager_agent.start()
    print("Agents are done!")