import csv 
import io
import subprocess
import time
import json

class NmapResultAnalyser(object):
    def analyse_scan_results(self, scan_result, report_file_name):
        #target_list = self._generate_target_list(scan_result)
        json_list_of_exploit = "report.json" #dummy data for testing
        #json_list_of_exploit = self._search_exploits(report_file_name)
        available_exploits = self._load_exploit_list_json(json_list_of_exploit)
        #TODO maybe connect targets to their exploits in json 
        return available_exploits
    
    def _load_exploit_list_json(self, json_file_name):
        with open(json_file_name) as json_file:
            #TODO fix loading of json so that it recognizes the file
            data = json.load(json_file)
        return data

    def _search_exploits(self, report_file_name):
        json_output_filename = "report.json"
        with open(json_output_filename, "w") as output_file:
            search_exploit = subprocess.run(["searchsploit", "-p","-j", "--nmap", report_file_name], stdout=output_file) 
            search_exploit.check_returncode
        print("Waiting for module to finish with available exploit search")
        time.sleep(5)
        #TODO check if report is created, once it is proceed (check if file exists, if yes compare it's size untill it's equal both times)
        return json_output_filename

    def _generate_target_list(self, scan_result):
        target_list = []
        reader = csv.DictReader(io.StringIO(scan_result), delimiter=";")
        for row in reader:
            print(row)
            target_list.append(row)
        return target_list